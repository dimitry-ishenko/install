#!/bin/bash

set -e
shopt -s dotglob
source colors 2>/dev/null || source "$(dirname "$0")"/colors

(($EUID != 0)) && die "Must be root"

unset arch desktop distro minimal rpi stage3 standard

for p in $@; do
    case $p in
        desktop) desktop=1;;
        focal|hirsute|impish|jammy|kinetic|lunar|mantic|noble) distro="$p";;
        i386|amd64|armhf|arm64) arch="$p";;
        minimal) minimal=1;;
        rpi) rpi=1;;
        stage3) stage3=1;;
        standard) standard=1;;
    esac
done

[[ -n "${minimal}${standard}${desktop}" ]] || die "Must specify one of minimal, standard or desktop"

if [[ ! -n "$stage3" ]]; then
####################
# stage2
####################

cage=./root
apt=$cage/etc/apt

if [[ -d $cage ]]; then
    for n in 5 4 3 2 1; do
        cyan -ne "\rRemoving current chroot"; echo -n " ... in $n "
        sleep 1
    done
    echo
    rm -r $cage
fi
mkdir $cage

[[ -n "$rpi" && ! -n "$arch" ]] && arch=arm64
arch=${arch:-$(dpkg-architecture -q DEB_BUILD_ARCH)}
distro=${distro:-$(ubuntu-distro-info --stable)}

cyan -n "Creating image: "; echo "$distro $arch"
debootstrap --variant=minbase --arch=$arch --cache-dir=/var/cache/apt/archives $distro $cage
echo

cyan "Adding Ubuntu sources"
[[ -n "$rpi" ]] && url=http://ports.ubuntu.com/ubuntu-ports || url=http://archive.ubuntu.com/ubuntu
rm -r $apt/{sources.list,trusted.gpg.d}
cp apt/50-ubuntu.sources $apt/sources.list.d/
sed -ri -e "s|%distro%|$distro|g" -e "s|URIs:.*|URIs: $url|" $apt/sources.list.d/50-ubuntu.sources

cyan "Adding ppa-verse sources"
cp ppa/ppa-verse/30-ppa-verse-{core,dev}.sources $apt/sources.list.d/
cp ppa/ppa-verse/ppa-verse-keyring.gpg $apt/keyrings/
sed -ri -e "s|%distro%|$distro|g" $apt/sources.list.d/30-ppa-verse-*.sources

cyan "Moving onto stage3"
cp -v "$0" /usr/bin/colors $cage/root/
systemd-nspawn --bind=/var/cache/apt/archives --resolv-conf=bind-stub --directory=$cage --timezone=off /root/$(basename "$0") "$@" stage3
rm $cage/root/{$(basename "$0"),colors}

else
####################
# stage3
####################

echo
cyan "Installing CA certificates"
apt-get -y install ca-certificates
echo

cyan "Updating system"
apt-get update
apt-get -y dist-upgrade --autoremove --purge
apt-mark showmanual | xargs apt-mark auto
echo

cyan "Installing ubuntu-minimal-meta"
DEBIAN_FRONTEND=noninteractive apt-get -y install ubuntu-minimal-meta polkitd- shared-mime-info- thermald- xdg-user-dirs-
echo

cyan "Generating locales"
sed -ri -e "s/^# (en_US.UTF-8.*)$/\1/" /etc/locale.gen
echo LANG=en_US.UTF-8 > /etc/default/locale
dpkg-reconfigure -fnoninteractive locales
echo

if [[ -n "$standard" || -n "$desktop" ]]; then
    cyan "Installing ubuntu-standard-meta"
    apt-get -y install ubuntu-standard-meta plymouth- xauth-
    echo

    cyan "Installing tools-meta"
    apt-get -y install tools-meta mailcap- pastebinit- xauth-
    echo
fi

if [[ -n "$desktop" ]]; then
    cyan "Installing ubuntu-desktop-meta"
    apt-get -y install ubuntu-desktop-meta apparmor- cloud-init- fonts-noto-cjk- memtest86+- modemmanager- openvpn- ppp- secureboot-db- speech-dispatcher- sssd-
    echo
fi

cyan "Creating fstab"
[[ -n "$rpi" ]] && boot=firmware || boot="efi     "
cat > /etc/fstab <<EOF
# <source>      <target>        <type>  <options>                   <dump>  <pass>

LABEL=root      /               ext4    noatime,errors=remount-ro   0       1
LABEL=$boot  /boot/$boot  vfat    noatime,umask=0077          0       1

#/swapfile      none            swap    sw                          0       0
EOF

cyan "Setting hostname"
echo linux > /etc/hostname

cyan "Modifying journald.conf"
sed -ri -e "s/#Storage=auto/Storage=volatile/" -e "s/#SplitMode=uid/SplitMode=none/" /etc/systemd/journald.conf

cyan "Forcing color terminal"
sed -ri -e "s/#(force_color_prompt=yes)/\1/g" /etc/skel/.bashrc

cyan "Updating root files"
cp -rv /etc/skel/* /root/
sed -ri -e "s/01;32m/01;31m/g" /root/.bashrc
echo

if [[ -n "$rpi" ]]; then
    mkdir -p /boot/firmware

    cyan "Creating config.txt"
    cat > /boot/firmware/config.txt <<EOF
[pi4]
max_framebuffers=2

[all]
arm_64bit=1

kernel=vmlinuz
cmdline=cmdline.txt
initramfs initrd.img followkernel

dtparam=audio=on
dtparam=i2c_arm=on
dtparam=spi=on

dtoverlay=dwc2
#dtoverlay=i2c-rtc,ds3231
EOF

    cyan "Creating cmdline.txt"
    cat > /boot/firmware/cmdline.txt <<EOF
dwc_otg.lpm_enable=0 console=serial0,115200 console=tty1 root=LABEL=root rootfstype=ext4 elevator=deadline rootwait fixrtc quiet splash
EOF

    cyan "Hax0ring flash-kernel functions"
    functions=/usr/share/flash-kernel/functions
    mv $functions $functions.bak
    sed -e 's|if \(\[ -d /sys/firmware/efi \]\);|if \1 \&\& [ "$FK_FORCE" != "yes" ];|' $functions.bak > $functions

    cyan "Flashing kernel"
    FK_FORCE=yes flash-kernel --machine "Raspberry Pi "
    echo
fi

if [[ -n "$standard" || -n "$desktop" ]]; then
    cyan "Enabling SSH socket"
    systemctl disable ssh.service
    systemctl enable ssh.socket
fi

cyan "Disabling services"
systemctl disable apt-daily-upgrade.timer apt-daily.timer dpkg-db-backup.timer getty@tty1.service
systemctl disable man-db.timer || true
echo

cyan "Cleaning up"
rm -rv /etc/{apparmor.d,cron.*,emacs,init.d,rc?.d,rsyslog.d} || true

fi
